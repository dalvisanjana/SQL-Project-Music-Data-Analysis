

11 Table Sequence wise
1 Artist
CREATE TABLE artist (
    artist_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


2 Album
CREATE TABLE album (S
    album_id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artist(artist_id)
);



3 Playlist
CREATE TABLE playlist (
    playlist_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);



4 Play List Track

CREATE TABLE playlisttrack (
    playlist_id INT,
    track_id INT,
    PRIMARY KEY (playlist_id, track_id),
    FOREIGN KEY (playlist_id) REFERENCES playlist(playlist_id),
    FOREIGN KEY (track_id) REFERENCES track(track_id)
);




5 Media type
CREATE TABLE mediatype (
    media_type_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);




6 Genre

CREATE TABLE genre (
    genre_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);



7 Track
CREATE TABLE track (
    track_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    album_id INT,
    media_type_id INT,
    genre_id INT,
    composer VARCHAR(255),
    milliseconds INT,
    bytes INT,
    unit_price DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (album_id) REFERENCES album(album_id),
    FOREIGN KEY (media_type_id) REFERENCES media_type(media_type_id),
    FOREIGN KEY (genre_id) REFERENCES genre(genre_id)
);





8 Employee
CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    last_name VARCHAR(255) NOT NULL,
    first_name VARCHAR(255) NOT NULL,
    title VARCHAR(255),
    reports_to INT,
    levels INT,
    birthdate DATE,
    hire_date DATE,
    address VARCHAR(255),
    city VARCHAR(255),
    state VARCHAR(255),
    country VARCHAR(255),
    postal_code VARCHAR(20),
    phone VARCHAR(20),
    fax VARCHAR(20),
    email VARCHAR(255) NOT NULL,
    FOREIGN KEY (reports_to) REFERENCES employee(employee_id)
);


9 Customer
CREATE TABLE customer (
 

  customer_id INT PRIMARY KEY,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    company VARCHAR(255),
    address VARCHAR(255),
    city VARCHAR(255),
    state VARCHAR(255),
    country VARCHAR(255),
    postal_code VARCHAR(20),
    phone VARCHAR(20),
    fax VARCHAR(20),
    email VARCHAR(255) NOT NULL,
    support_rep_id INT,
    FOREIGN KEY (support_rep_id) REFERENCES employee(employee_id)
);


10 Invoice
CREATE TABLE invoice (
    invoice_id INT PRIMARY KEY,
    customer_id INT,
    invoice_date DATE,
    billing_address VARCHAR(255),
    billing_city VARCHAR(255),
    billing_state VARCHAR(255),
    billing_country VARCHAR(255),
    billing_postal_code VARCHAR(20),
    total DECIMAL(10, 2),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);





11 Invoice Line
CREATE TABLE invoice
 

 invoice_line_id INT PRIMARY KEY,
    invoice_id INT,
    track_id INT,
    unit_price DECIMAL(10, 2) NOT NULL,
    quantity INT NOT NULL,
    FOREIGN KEY (invoice_id) REFERENCES invoice(invoice_id),
    FOREIGN KEY (track_id) REFERENCES track(track_id)
);


SELECT p.track_id, i.quantity
FROM playlisttrack AS p
JOIN track AS t ON p.track_id = t.track_id
JOIN invoiceline AS i ON t.track_id = i.track_id;




